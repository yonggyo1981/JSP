1,2,3,4,5 -- 0 번째    Math.floor((현재 페이지 - 1) / 구간별 페이지 수) 
0 0 0 0 0

6, 7, 8, 9, 10  -- 1번째 구간 
1 1  1  1   1

11,12,13,14,15  - 2번째 구간
2   2 2   2   2

16,17,18,19,20

마지막 페이지
Math.ceil(전체 투플의 갯수 / 1페이지당 출력 갯수) 

1 ~ 마지막페이지 -> 구간별로 
0번
1,2,3,4,5

1번구간
6, 7, 8, 9, 10 - 1번 

시작번호 - 6 - 1 * 5 + 1  - (페이지 구간번호 * 페이지 개수  + 1)
종료번호 - 10 -  (6 + 5 - 1) - (시작번호 + 페이지 개수 - 1)


구현 로직 정리

1) 페이지 구간 번호
  현재 페이지 번호가 속해 있는 페이지 구간
  페이지는 5개씩 1구간(pageLinks)
  
  1,2,3,4,5   
  0 1 2 3, 4
  0, 0, 0, 0, 0  - 0 번째 구간 
  
  6,7,8,9,10
  5, 6, 7, 8, 9
  1, 1, 1, 1, 1 - 1 번째 구간 
  
  11,12,13,14,15
  10, 11, 12, 13, 14
  2, 2, 2, 2, 2 - 2번째 구간
  
  구간번호 = 버림((현재 페이지 - 1) / 구간별 페이지 수);
  
2) 구간별 시작 페이지 번호, 구간별 종료 페이지 번호

구간별 시작 페이지 = (구간 번호 * 구간별 페이지 수) + 1;
구간별 종료 페이지 = 구간별 시작 페이지 + 구간별 페이지 수 - 1;
  
 
3) 구간별 종료 페이지 <= 마지막 페이지
구간별 종료페이지가 마지막 페이지보다 크면
구간별 종료페이지 = 마지막 페이지;


4) 
다음 페이지 시작 번호
	- 마지막구간 다음페이지 이동 X
	- 마지막 구간을 체크 -> 미노출 
	
이전페이지 시작번호
	- 첫 구간이전 페이지 이동 X
	- 첫 구간에는 미노출 
	
5) 
첫 페이지로 이동
	- 첫 구간에는 필요 X
	
마지막 페이지 이동
	- 마지막 구간에는 필요 X 