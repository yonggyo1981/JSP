블로그 
1. URL - 서블릿으로 만드시고 -> web.xml (doGet, dPost)
	1) 작성	
		/blog/post 
		
	2) 목록(블로그 게시글 + 목록) - 서블릿 -> web.xml (doGet)
		/blog 
		
	3) 수정
		/blog/edit?게시글번호(name)=번호 - 서블릿 -> web.xml(doGet, doPost)
		/blog/edit/* -> 번호 
		
	4) 삭제
		/blog/delete?게시글번호(name)=번호 - 서블릿 -> web.xml(doGet)
		/blog/delete/*  <- * -> 게시글 번호
		4시2
2. UI 


3. 공통 필터 설정
	javax.servlet
		Filter 인터페이스 
			- init 
			- doFilter 
			- destroy -> 따로 설정 하지 않아도 됨(필요한 경우에 정의)
			
		url-pattern /*
		
		<filter>
			<filter-name></filter-name>
			<filter-class></filter-class>
		</filter>
		<filter-mapping>
			<filter-name></filter-name>
			<url-pattern></url-pattern>
		</filter-mapping>
		
		
		init(FilterConfig filterConfig) {
			System.out.println("init 실행");
		}
		
		doFilter(....
		
		System.out.println("전처리!");
		
		chain.doFilter(.....)
		
		System.out.println("후처리");
		
4. 공통 헤더, 푸터

	public void doFilter(.........) {
		 
		 헤더 출력 메서드(ServlerRequest 매개변수)
							  
		chain.doFilter(request, response);
		
		푸터 출력 메서드(ServletRequest 매개변수)
	}

	
	헤더 출력 메서드(ServletRequest 매개변수) ....
	
	
	푸터 출력 메서드(ServletRequest 매개변수) ... 
	
	
	webapp/적절한 폴더 생성 -> 헤더.jsp, 푸터.jsp
	
	
5. 정적 자원 -> 헤더, 푸터, text/html -> 다른 타입의 자료는 동작 X

   헤더출력가능여부 체크 메서드
	- URI (HttpServletRequest) -> 다운 캐스팅 (ServletRequest -> HttpServletRequest)
	http://www.naver.com/sport/football?t=1&t2=2 - URL 
		HttpServletRequest StringBuffer getRequestURL()
		
	http://www.naver.com/sport/football - URI 
		HttpServletRequest -> String getRequestURI()
		
		
	헤더 출력의 기준 -> 정적 디렉토리의 URI가 아닌 경우만 출력 
	
	1. 멤버 변수 선언
	   private String[] 정적 디렉토리 = { "디렉토리명1", "디렉토리명2" };
	   
	2. boolean 헤더출력할지 말지 정하는 메서드(ServletRequest request) 
		- HttpServletRequest getRequestURI
		
		if (request instanceof HttpServletRequest) {
			HttpServletRequest req = (HttpServletRequest)request;
			1. 메서드(GET이 아닐때) false -> 헤더 출력 X
				getMethod() ->GET X -> false 
				
			2. 
			String requestURI = req.getRequestURI();
		
			정적 디렉토리가 URI에 포함이 되어 있는지 여부 체크 
			포함되어 있으면 -> false -> 헤더 출력 X
			for ...
			indexOf ... != -1
			contains
		}
		
	
		정적디렉토리 -> css, js, images ....
		
		public void header(ServletRequest request, ServletResponse response) throws .... {
			if (헤더출력?(request)) {
				response.setContentType("text/html; charset=utf-8");
				RequestDispacher .....
			}
		}

		public void footer(ServletRequest request, ServletResponse response) throws .... {
			if (헤더 출력?(request)) {
				RequestDispatcher .... 
			}
		}
		
		

SQL 파일로 데이터 백업
mysqldump -u사용자계정 -p  저장할 데이터베이스명 > 파일명.sql


DB로 import 
mysql -u사용자계정 -p  저장할 데이터베이스명 < 파일명.sql